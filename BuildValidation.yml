# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger: none
  #branches:
    #include:
      #- master
  #paths:
    #include:
      #- '*'
    #exclude:
      #- Client/*
      
stages:
- stage: 'Build'
  displayName: 'Build and Unit Test .NET Core application'
  jobs:
  - job: 'Build'
    displayName: 'Build application'
    pool: 
     vmImage: 'vs2017-win2016'

    variables:
      solution: '**/*.sln'
      buildPlatform: 'Any CPU'
      buildConfiguration: 'Release'

    steps:

    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'TerraformSonar'
        organization: 'asif-a-masood23944'
        scannerMode: 'MSBuild'
        projectKey: 'asif-a-masood23944'
        projectName: 'TerraformSonarAnalysis Passed'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'


    - task: SonarCloudAnalyze@1

    - task: SonarCloudPublish@1
      inputs:
        pollingTimeoutSec: '300'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '**/*[Tt]ests/*.csproj'
        arguments: '--configuration $(BuildConfiguration)'
        testRunTitle: 'Run Unit Test'